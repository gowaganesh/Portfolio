{"version":3,"file":"static/js/771.4d35c5e6.chunk.js","mappings":"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","sources":["components/about/index.tsx"],"sourcesContent":["import {\r\n  List,\r\n  ListItem,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { useEffect, useState, useMemo, lazy, Suspense } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { constants } from \"../../lib/utils/constants/constants\";\r\nimport AppContainer from \"../common/appContainer\";\r\nimport HeroImageContainer from \"../layout/heroImageContainer\";\r\nimport useImageLoader from \"../../lib/hooks/useImageLoader\";\r\n\r\nconst WorkExperience = lazy(() => import(\"./workExperience\"));\r\nconst Awards = lazy(() => import(\"./awards\"));\r\nconst Certifications = lazy(() => import(\"./certifications\"));\r\nconst Education = lazy(() => import(\"./education\"));\r\n\r\nconst loadImage = async () => {\r\n  const module = await import(\"../../assets/bg3.jpg\");\r\n  return module.default;\r\n};\r\n\r\nconst AboutIndex = () => {\r\n  const { pathname } = useLocation();\r\n  const { ABOUT, AWARDS, CERTIFICATIONS, EDUCATION } = constants.ROUTES;\r\n  const [currentPage, setCurrentPage] = useState(pathname || ABOUT);\r\n  const imageUrl = useImageLoader(loadImage);\r\n\r\n  const aboutItems = useMemo(() => [\r\n    { label: \"Work Experience\", path: ABOUT },\r\n    { label: \"Awards & Recognitions\", path: AWARDS },\r\n    { label: \"Certifications\", path: CERTIFICATIONS },\r\n    { label: \"Education\", path: EDUCATION },\r\n  ], [ABOUT, AWARDS, CERTIFICATIONS, EDUCATION]);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(pathname);\r\n  }, [pathname]);\r\n\r\n  const getPage = () => {\r\n    switch (currentPage) {\r\n      case ABOUT:\r\n        return <WorkExperience />;\r\n      case AWARDS:\r\n        return <Awards />;\r\n      case CERTIFICATIONS:\r\n        return <Certifications />;\r\n      case EDUCATION:\r\n        return <Education />;\r\n      default:\r\n        return <WorkExperience />;\r\n    }\r\n  };\r\n\r\n  const getPageName = () => {\r\n    switch (currentPage) {\r\n      case ABOUT:\r\n        return \"Work Experience\";\r\n      case AWARDS:\r\n        return \"Awards & Recognition\";\r\n      case CERTIFICATIONS:\r\n        return \"Certifications\";\r\n      case EDUCATION:\r\n        return \"Education\";\r\n      default:\r\n        return \"Work Experience\";\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      {imageUrl && <HeroImageContainer imageUrl={imageUrl} />}\r\n      <AppContainer>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={3} sx={{ display: { xs: \"none\", sm: \"block\" } }}>\r\n            <Typography\r\n              color=\"textDisabled\"\r\n              fontWeight={700}\r\n              variant=\"h6\"\r\n              textAlign=\"start\"\r\n              paddingLeft={2}\r\n              paddingTop={1}\r\n            >\r\n              About\r\n            </Typography>\r\n            <List>\r\n              {aboutItems.map(({ label, path }) => (\r\n                <ListItem key={path} sx={{ py: 0 }}>\r\n                  <Link to={path} replace>\r\n                    <Typography\r\n                      sx={{\r\n                        py: 0.5,\r\n                        cursor: \"pointer\",\r\n                        color: path === currentPage ? \"black\" : \"GrayText\",\r\n                        \":hover\": { color: \"black\" },\r\n                        fontSize: path === currentPage ? 20 : 14,\r\n                      }}\r\n                      fontWeight={600}\r\n                    >\r\n                      {label}\r\n                    </Typography>\r\n                  </Link>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={9}>\r\n            <Suspense fallback={<Typography>Loading...</Typography>}>\r\n              <Typography sx={{\r\n                visibility : {\r\n                  sm : 'hidden'\r\n                }\r\n              }} variant=\"h3\" py={2}>{getPageName()}</Typography>\r\n              {getPage()}\r\n            </Suspense>\r\n          </Grid>\r\n        </Grid>\r\n      </AppContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AboutIndex;\r\n"],"names":["WorkExperience","lazy","Awards","Certifications","Education","loadImage","async","default","AboutIndex","pathname","useLocation","ABOUT","AWARDS","CERTIFICATIONS","EDUCATION","constants","ROUTES","currentPage","setCurrentPage","useState","imageUrl","useImageLoader","aboutItems","useMemo","label","path","useEffect","_jsxs","_Fragment","children","_jsx","HeroImageContainer","AppContainer","Grid","container","spacing","item","xs","sm","sx","display","Typography","color","fontWeight","variant","textAlign","paddingLeft","paddingTop","List","map","_ref","ListItem","py","Link","to","replace","cursor","fontSize","Suspense","fallback","visibility","getPageName","getPage"],"sourceRoot":""}