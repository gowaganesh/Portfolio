{"version":3,"file":"static/js/775.176d2502.chunk.js","mappings":"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","sources":["components/common/markdownRenderer.tsx","components/home/index.tsx"],"sourcesContent":["import React, { useState, useEffect, ReactNode } from \"react\";\r\nimport { Typography, List, ListItem, ListItemText, Link } from \"@mui/material\";\r\nimport Markdown from \"react-markdown\";\r\nimport remarkGfm from \"remark-gfm\";\r\nimport remarkRehype from \"remark-rehype\";\r\nimport rehypeRaw from \"rehype-raw\";\r\n\r\ninterface MarkdownRendererProps {\r\n    contentUrl: string; \r\n    storageKey: string; \r\n}\r\n\r\nconst MarkdownRenderer: React.FC<MarkdownRendererProps> = ({ contentUrl, storageKey }) => {\r\n    const [content, setContent] = useState<string>(\"\");\r\n\r\n    useEffect(() => {\r\n        const storedContent = sessionStorage.getItem(storageKey);\r\n\r\n        // if (storedContent) {\r\n        //     setContent(storedContent);\r\n        // } else {\r\n            fetch(contentUrl)\r\n                .then((response) => response.text())\r\n                .then((text) => {\r\n                    setContent(text);\r\n                    sessionStorage.setItem(storageKey, text);\r\n                })\r\n                .catch(() => setContent(\"Failed to load content. Please reload the page!\"));\r\n        // }\r\n    }, [contentUrl, storageKey]);\r\n\r\n    return (\r\n        <Markdown\r\n            remarkPlugins={[remarkGfm]}\r\n            rehypePlugins={[remarkRehype, rehypeRaw]}\r\n            components={{\r\n                h1: ({ children }: { children?: ReactNode }) => (\r\n                    <Typography variant=\"h1\">{children}</Typography>\r\n                ),\r\n                h2: ({ children }: { children?: ReactNode }) => (\r\n                    <Typography variant=\"h2\">{children}</Typography>\r\n                ),\r\n                h3: ({ children }: { children?: ReactNode }) => (\r\n                    <Typography variant=\"h3\">{children}</Typography>\r\n                ),\r\n                h4: ({ children }: { children?: ReactNode }) => (\r\n                    <Typography variant=\"h4\">{children}</Typography>\r\n                ),\r\n                h5: ({ children }: { children?: ReactNode }) => (\r\n                    <Typography variant=\"h5\">{children}</Typography>\r\n                ),\r\n                h6: ({ children }: { children?: ReactNode }) => (\r\n                    <Typography variant=\"h6\">{children}</Typography>\r\n                ),\r\n                ul: ({ children }: { children?: ReactNode }) => (\r\n                    <List\r\n                        sx={{ pt: 0 }}\r\n                        style={{ listStyleType: \"disc\", paddingLeft: \"20px\" }}\r\n                    >\r\n                        {children}\r\n                    </List>\r\n                ),\r\n                ol: ({ children }: { children?: ReactNode }) => (\r\n                    <List\r\n                        sx={{ pt: 0 }}\r\n                        style={{ listStyleType: \"decimal\", paddingLeft: \"20px\" }}\r\n                    >\r\n                        {children}\r\n                    </List>\r\n                ),\r\n                li: ({ children }: { children?: ReactNode }) => (\r\n                    <ListItem\r\n                        style={{ display: \"list-item\", paddingLeft: 0 }}\r\n                        sx={{ pt: 0, pb: 1 }}\r\n                        disableGutters\r\n                    >\r\n                        <ListItemText sx={{ pt: 0 }}>{children}</ListItemText>\r\n                    </ListItem>\r\n                ),\r\n                a: ({ href, children }: { href?: string; children?: ReactNode }) => (\r\n                    <Link href={href} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        {children}\r\n                    </Link>\r\n                ),\r\n                p: ({ children }: { children?: ReactNode }) => (\r\n                    <Typography variant=\"body1\">{children}</Typography>\r\n                ),\r\n            }}\r\n        >\r\n            {content}\r\n        </Markdown>\r\n    );\r\n};\r\n\r\nexport default React.memo(MarkdownRenderer);\r\n","import  Box  from \"@mui/material/Box\";\r\nimport HeroImageContainer from \"../layout/heroImageContainer\";\r\nimport homeBannerImage from \"../../assets/bg2.jpg\";\r\nimport AppContainer from \"../common/appContainer\";\r\nimport MarkdownRenderer from \"../common/markdownRenderer\";\r\nimport home from \"../../lib/data/home.md\"\r\nconst HomeIndex = () => {\r\n\r\n  return (\r\n    <>\r\n      <HeroImageContainer imageUrl={homeBannerImage} />\r\n      <AppContainer>\r\n        <Box p={2}>\r\n          <MarkdownRenderer contentUrl={home} storageKey=\"home\"/>\r\n        </Box>\r\n      </AppContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeIndex;\r\n"],"names":["MarkdownRenderer","_ref","contentUrl","storageKey","content","setContent","useState","useEffect","sessionStorage","getItem","fetch","then","response","text","setItem","catch","_jsx","Markdown","remarkPlugins","remarkGfm","rehypePlugins","remarkRehype","rehypeRaw","components","h1","_ref2","children","Typography","variant","h2","_ref3","h3","_ref4","h4","_ref5","h5","_ref6","h6","_ref7","ul","_ref8","List","sx","pt","style","listStyleType","paddingLeft","ol","_ref9","li","_ref10","ListItem","display","pb","disableGutters","ListItemText","a","_ref11","href","Link","target","rel","p","_ref12","React","HomeIndex","_jsxs","_Fragment","HeroImageContainer","imageUrl","homeBannerImage","AppContainer","Box","home"],"sourceRoot":""}